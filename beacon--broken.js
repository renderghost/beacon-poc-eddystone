import React, { useState } from 'react'; import noble from 'noble'; // For accessing the Bluetooth LE module function App() { // Set up state for the URL and broadcast status const [url, setUrl] = useState('https://www.example.com'); const [status, setStatus] = useState(null); // This function will start the broadcast of the Eddystone-URL advertisement packet function startBroadcast() { // Set up the Eddystone-URL advertisement data const advertisementData = [ { type: 'serviceData', uuid: 'feaa', data: [ 0x10, // Frame type 0x20, // RX power ...urlToBytes(url) // URL ] } ]; // Start broadcasting the advertisement data noble.startAdvertisingWithEIRData(Buffer.from(advertisementData), (error) => { if (error) { console.log('Error starting broadcast: ' + error); setStatus('Error starting broadcast: ' + error); } else { console.log('Broadcasting Eddystone-URL: ' + url); setStatus('Broadcasting Eddystone-URL: ' + url); } }); } // This function will stop the broadcast of the Eddystone-URL advertisement packet function stopBroadcast() { noble.stopAdvertising((error) => { if (error) { console.log('Error stopping broadcast: ' + error); setStatus('Error stopping broadcast: ' + error); } else { console.log('Stopped broadcast'); setStatus('Stopped broadcast'); } }); } // Convert a URL to an array of bytes function urlToBytes(url) { const bytes = [0x00]; // URL scheme prefix (0x00 for "http://www.") for (const c of url) { if (c.charCodeAt(0) < 256) { bytes.push(c.charCodeAt(0)); } } return bytes; } return ( <div> <h1>Beacon</h1> <p> This app will broadcast the specified URL as an Eddystone-URL advertisement packet using Bluetooth. </p> <label htmlFor="url">URL:</label> <input type="text" id="url" value={url} onChange={(event) => setUrl(event.target.value)} /> <button onClick={startBroadcast}>Start Broadcast</button> <button onClick={stopBroadcast}>Stop Broadcast</button> {status && <p>{status}</p>} </div> ); } export default App;
